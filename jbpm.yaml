apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: jbpm-{environment}-kolanot-{domain}
    name: jbpm-{environment}-kolanot-{domain}
  name: jbpm-{environment}-kolanot-{domain}
  namespace: jbpm-{environment}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      run: jbpm-{environment}-kolanot-{domain}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        run: jbpm-{environment}-kolanot-{domain}
        name: jbpm-{environment}-kolanot-{domain}
    spec:
      containers:
      - env:
        - name: JBPM_DB_DRIVER
          value: mysql
        - name: JBPM_DB_HOST
          value: 10.10.9.36
        - name: JBPM_DB_NAME
          value: jbpm_{environment}_{domain-db}
        - name: JBPM_DB_PASSWORD
          value: JSHSBsbshdSb!1ssQ
        - name: JBPM_DB_PORT
          value: "3306"
        - name: JBPM_DB_USER
          value: jbpm
        image: jboss/jbpm-server-full:7.47.0.Final
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 50
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 750
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: jbpm-{environment}-kolanot-{domain}
        readinessProbe:
          failureThreshold: 50
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 100
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: "4"
            memory: 8Gi
          requests:
            cpu: "1"
            memory: 4Gi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsConfig: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---

apiVersion: v1
kind: Service
metadata:
  labels:
    run: jbpm-{environment}-kolanot-{domain}
    name: jbpm-{environment}-kolanot-{domain}
  name: jbpm-{environment}-kolanot-{domain}
  namespace: jbpm-{environment}
spec:
  clusterIP: None
  ports:
  - name: default
    port: 42
    protocol: TCP
    targetPort: 42
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    run: jbpm-{environment}-kolanot-{domain}
  sessionAffinity: None
  type: ClusterIP

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: jbpm-{environment}-kolanot-{domain}
  namespace: jbpm-{environment}
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "20m"
    nginx.org/client-max-body-size: "20m"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    ingress.kubernetes.io/force-ssl-redirect: "true"
    kubernetes.io/tls-acme: "true"
    external-dns.alpha.kubernetes.io/target: "51.148.1.82"
spec:
  tls:
  - hosts:
    - jbpm-{environment}-{domain-ingress-url}.kolanot.com
    #secretName: wildcard.kolanot-{domain}
  rules:
  - host: jbpm-{environment}-{domain-ingress-url}.kolanot.com
    http:
      paths:
      - path: /
        backend:
          serviceName: jbpm-{environment}-kolanot-{domain}
          servicePort: 8080